{"ast":null,"code":"var _jsxFileName = \"/Users/willkim/Desktop/bootcamp/code-quiz/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport questionsData from './questions'; // Importing the questions data\nimport '../styles/quiz.css';\n\n// Function to shuffle an array\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n  return array;\n}\nfunction Quiz({\n  onGameOver,\n  setFinalScore\n}) {\n  _s();\n  var _questions$currentQue, _questions$currentQue2;\n  // Initialize questions state with shuffled questions and choices\n  const [questions, setQuestions] = useState(() => shuffleArray(questionsData.map(q => ({\n    ...q,\n    choices: shuffleArray([...q.choices]) // Shuffling choices for each question\n  }))));\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [timer, setTimer] = useState(60);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n\n  // Handle quiz end condition\n  useEffect(() => {\n    if (timer <= 0 || currentQuestionIndex >= questions.length) {\n      onGameOver();\n      setFinalScore(correctAnswers);\n    }\n  }, [timer, currentQuestionIndex, onGameOver, setFinalScore, correctAnswers]);\n\n  // Timer countdown\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTimer(currentTimer => !showFeedback && currentTimer > 0 ? currentTimer - 1 : currentTimer);\n    }, 1000);\n\n    // Clear interval on feedback\n    if (showFeedback) {\n      clearInterval(intervalId);\n    }\n    return () => clearInterval(intervalId);\n  }, [showFeedback]);\n\n  // Handling answer selection\n  const handleAnswer = choice => {\n    setSelectedAnswer(choice);\n    setShowFeedback(true);\n    setTimeout(() => {\n      let isCorrect = choice === questions[currentQuestionIndex].answer;\n      if (isCorrect) {\n        setCorrectAnswers(prev => prev + 1); // Increment correct answers\n      } else {\n        setTimer(t => Math.max(t - 10, 0)); // Penalty for wrong answer\n      }\n      if (currentQuestionIndex === questions.length - 1) {\n        // If this is the last question, end the quiz\n        onGameOver();\n        setFinalScore(isCorrect ? correctAnswers + 1 : correctAnswers); // Update final score\n      } else {\n        // Move to the next question and hide feedback\n        setShowFeedback(false);\n        setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      }\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Timer: \", timer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: (_questions$currentQue = questions[currentQuestionIndex]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choices\",\n      children: (_questions$currentQue2 = questions[currentQuestionIndex]) === null || _questions$currentQue2 === void 0 ? void 0 : _questions$currentQue2.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        // Using index as key because of shuffling\n        disabled: showFeedback,\n        onClick: () => handleAnswer(choice),\n        className: `${showFeedback ? choice === questions[currentQuestionIndex].answer ? 'correct' : 'incorrect' : ''} ${choice === selectedAnswer ? 'selected' : ''}`,\n        children: choice\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"OHJvl7mgtpfKNsIN1BAIJLc6lf4=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","questionsData","jsxDEV","_jsxDEV","shuffleArray","array","currentIndex","length","randomIndex","Math","floor","random","Quiz","onGameOver","setFinalScore","_s","_questions$currentQue","_questions$currentQue2","questions","setQuestions","map","q","choices","currentQuestionIndex","setCurrentQuestionIndex","timer","setTimer","correctAnswers","setCorrectAnswers","showFeedback","setShowFeedback","selectedAnswer","setSelectedAnswer","intervalId","setInterval","currentTimer","clearInterval","handleAnswer","choice","setTimeout","isCorrect","answer","prev","t","max","prevIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","index","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/willkim/Desktop/bootcamp/code-quiz/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport questionsData from './questions'; // Importing the questions data\r\nimport '../styles/quiz.css';\r\n\r\n// Function to shuffle an array\r\nfunction shuffleArray(array) {\r\n  let currentIndex = array.length, randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (currentIndex !== 0) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nfunction Quiz({ onGameOver, setFinalScore }) {\r\n  // Initialize questions state with shuffled questions and choices\r\n  const [questions, setQuestions] = useState(() => shuffleArray(\r\n    questionsData.map(q => ({\r\n      ...q,\r\n      choices: shuffleArray([...q.choices]) // Shuffling choices for each question\r\n    }))\r\n  ));\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [timer, setTimer] = useState(60);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n\r\n  // Handle quiz end condition\r\n  useEffect(() => {\r\n    if (timer <= 0 || currentQuestionIndex >= questions.length) {\r\n      onGameOver();\r\n      setFinalScore(correctAnswers);\r\n    }\r\n  }, [timer, currentQuestionIndex, onGameOver, setFinalScore, correctAnswers]);\r\n\r\n  // Timer countdown\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setTimer(currentTimer => !showFeedback && currentTimer > 0 ? currentTimer - 1 : currentTimer);\r\n    }, 1000);\r\n\r\n    // Clear interval on feedback\r\n    if (showFeedback) {\r\n      clearInterval(intervalId);\r\n    }\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [showFeedback]);\r\n\r\n  // Handling answer selection\r\n  const handleAnswer = (choice) => {\r\n    setSelectedAnswer(choice);\r\n    setShowFeedback(true);\r\n\r\n    setTimeout(() => {\r\n      let isCorrect = choice === questions[currentQuestionIndex].answer;\r\n      if (isCorrect) {\r\n        setCorrectAnswers(prev => prev + 1); // Increment correct answers\r\n      } else {\r\n        setTimer(t => Math.max(t - 10, 0)); // Penalty for wrong answer\r\n      }\r\n\r\n      if (currentQuestionIndex === questions.length - 1) {\r\n        // If this is the last question, end the quiz\r\n        onGameOver();\r\n        setFinalScore(isCorrect ? correctAnswers + 1 : correctAnswers); // Update final score\r\n      } else {\r\n        // Move to the next question and hide feedback\r\n        setShowFeedback(false);\r\n        setCurrentQuestionIndex(prevIndex => prevIndex + 1);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className='quiz'>\r\n      <div>Timer: {timer}</div>\r\n      <div className='question'>{questions[currentQuestionIndex]?.question}</div>\r\n      <div className='choices'>\r\n        {questions[currentQuestionIndex]?.choices.map((choice, index) => (\r\n          <button\r\n            key={index} // Using index as key because of shuffling\r\n            disabled={showFeedback}\r\n            onClick={() => handleAnswer(choice)}\r\n            className={`${showFeedback ? (choice === questions[currentQuestionIndex].answer ? 'correct' : 'incorrect') : ''} ${choice === selectedAnswer ? 'selected' : ''}`}\r\n          >\r\n            {choice}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}