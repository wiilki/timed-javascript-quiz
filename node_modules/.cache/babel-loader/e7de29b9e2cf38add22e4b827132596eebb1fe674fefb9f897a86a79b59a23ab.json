{"ast":null,"code":"var _jsxFileName = \"/Users/willkim/Desktop/bootcamp/code-quiz/src/components/GameOver.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/game-over.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameOver({\n  onRestart,\n  finalScore\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const saveScore = () => {\n    // Validate if the name field is not empty\n    if (name.trim() === '') {\n      alert('Please enter your name to save your score.');\n      return;\n    }\n\n    // Use the finalScore prop instead of the placeholder comment\n    const newScore = {\n      name,\n      value: finalScore\n    };\n    const scores = JSON.parse(localStorage.getItem('scores')) || [];\n    scores.push(newScore);\n    localStorage.setItem('scores', JSON.stringify(scores));\n    onRestart(); // Go back to start screen\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-over\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Your score: \", finalScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Your Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveScore,\n      children: \"Save Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onRestart,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(GameOver, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n_c = GameOver;\nexport default GameOver;\nvar _c;\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GameOver","onRestart","finalScore","_s","name","setName","saveScore","trim","alert","newScore","value","scores","JSON","parse","localStorage","getItem","push","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/willkim/Desktop/bootcamp/code-quiz/src/components/GameOver.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/game-over.css'\r\n\r\nfunction GameOver({ onRestart, finalScore }) {\r\n  const [name, setName] = useState('');\r\n\r\n  const saveScore = () => {\r\n    // Validate if the name field is not empty\r\n    if (name.trim() === '') {\r\n      alert('Please enter your name to save your score.');\r\n      return;\r\n    }\r\n\r\n    // Use the finalScore prop instead of the placeholder comment\r\n    const newScore = { name, value: finalScore };\r\n    const scores = JSON.parse(localStorage.getItem('scores')) || [];\r\n    scores.push(newScore);\r\n    localStorage.setItem('scores', JSON.stringify(scores));\r\n    onRestart(); // Go back to start screen\r\n  };\r\n\r\n  return (\r\n    <div className='game-over'>\r\n      <h2>Game Over</h2>\r\n      <div>Your score: {finalScore}</div> {/* Display the final score */}\r\n      <label>\r\n        Your Name:\r\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n      </label>\r\n      <button onClick={saveScore}>Save Score</button>\r\n      <button onClick={onRestart}>Restart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,QAAQA,CAAC;EAAEC,SAAS;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA,IAAIF,IAAI,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtBC,KAAK,CAAC,4CAA4C,CAAC;MACnD;IACF;;IAEA;IACA,MAAMC,QAAQ,GAAG;MAAEL,IAAI;MAAEM,KAAK,EAAER;IAAW,CAAC;IAC5C,MAAMS,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE;IAC/DJ,MAAM,CAACK,IAAI,CAACP,QAAQ,CAAC;IACrBK,YAAY,CAACG,OAAO,CAAC,QAAQ,EAAEL,IAAI,CAACM,SAAS,CAACP,MAAM,CAAC,CAAC;IACtDV,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC;EAED,oBACEF,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBrB,OAAA;MAAAqB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBzB,OAAA;MAAAqB,QAAA,GAAK,cAAY,EAAClB,UAAU;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,KAAC,eACpCzB,OAAA;MAAAqB,QAAA,GAAO,YAEL,eAAArB,OAAA;QAAO0B,IAAI,EAAC,MAAM;QAACf,KAAK,EAAEN,IAAK;QAACsB,QAAQ,EAAGC,CAAC,IAAKtB,OAAO,CAACsB,CAAC,CAACC,MAAM,CAAClB,KAAK;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACRzB,OAAA;MAAQ8B,OAAO,EAAEvB,SAAU;MAAAc,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/CzB,OAAA;MAAQ8B,OAAO,EAAE5B,SAAU;MAAAmB,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACrB,EAAA,CA9BQH,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAgCjB,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}